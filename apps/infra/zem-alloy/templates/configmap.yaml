apiVersion: v1
data:
  config.alloy: |-
    // Write your Alloy config here:
    logging {
      level = "info"
      format = "logfmt"
    }
    livedebugging {
      enabled = true
    }

    discovery.kubernetes "pods" {
      role = "pod"
    }
    prometheus.scrape "pods" {
      targets    = discovery.kubernetes.pods.targets
      forward_to = [prometheus.remote_write.default.receiver]
    }

    discovery.kubernetes "nodes" {
      role = "node"
    }

    // Scrape Kubelet (cAdvisor) metrics from discovered Nodes
    prometheus.scrape "kubelet_cadvisor" { // Changed name for clarity
      targets = discovery.kubernetes.nodes.targets

      relabel_configs = [
        {
          source_labels = ["__meta_kubernetes_node_address_InternalIP", "__meta_kubernetes_node_address_ExternalIP", "__meta_kubernetes_node_address_Hostname"]
          regex = "(.+)"
          target_label = "__address__"
          replacement = "$$1:10250" // Kubelet usually listens on 10250 for metrics
          action = "replace"
        },
        {
          target_label = "__metrics_path__"
          replacement = "/metrics/cadvisor"
          action = "replace"
        }
        // Add other relabeling rules here, each as a separate map/object in the list
      ]

      forward_to = [prometheus.remote_write.default.receiver]
    }

    remote.kubernetes.secret "credentials" {
      namespace = {{ .Release.Namespace | quote }}
      name = "grafana-cloud-secret"
    }


    prometheus.remote_write "default" {
      endpoint {
        url = convert.nonsensitive(remote.kubernetes.secret.credentials.data["url"])

        basic_auth {
          username = convert.nonsensitive(remote.kubernetes.secret.credentials.data["username"])
          password = remote.kubernetes.secret.credentials.data["password"]
        }
      }
    }
kind: ConfigMap
metadata:
  name: alloy-config
