---
# Source: oci-native-ingress-controller/crds/ingress.oraclecloud.com_ingressclassparameters.yaml
#
# OCI Native Ingress Controller
#
# Copyright (c) 2023 Oracle America, Inc. and its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/
#
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: ingressclassparameters.ingress.oraclecloud.com
spec:
  group: ingress.oraclecloud.com
  names:
    kind: IngressClassParameters
    listKind: IngressClassParametersList
    plural: ingressclassparameters
    singular: ingressclassparameters
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.loadBalancerName
      name: LoadBalancerName
      type: string
    - jsonPath: .spec.compartmentId
      name: Compartment
      type: string
    - jsonPath: .spec.isPrivate
      name: Private
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IngressClassParameters is the Schema for the IngressClassParameters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IngressClassParametersSpec defines the desired state of IngressClassParameters
            properties:
              compartmentId:
                maxLength: 255
                minLength: 1
                type: string
              isPrivate:
                type: boolean
              loadBalancerName:
                type: string
              maxBandwidthMbps:
                default: 100
                maximum: 8000
                minimum: 10
                type: integer
              minBandwidthMbps:
                default: 10
                maximum: 8000
                minimum: 10
                type: integer
              reservedPublicAddressId:
                type: string
              subnetId:
                maxLength: 255
                minLength: 1
                type: string
            type: object
          status:
            description: IngressClassParametersStatus defines the observed state of IngressClassParameters
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: oci-native-ingress-controller/templates/deployment.yaml
#
# OCI Native Ingress Controller
#
# Copyright (c) 2023 Oracle America, Inc. and its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/
#
apiVersion: v1
kind: Namespace
metadata:
  name: native-ingress-controller-system
---
# Source: oci-native-ingress-controller/templates/serviceaccount.yaml
#
# OCI Native Ingress Controller
#
# Copyright (c) 2023 Oracle America, Inc. and its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oci-native-ingress-controller
  namespace: native-ingress-controller-system
  labels:
    helm.sh/chart: oci-native-ingress-controller-1.4.1
    app.kubernetes.io/name: oci-native-ingress-controller
    app.kubernetes.io/instance: oci-native-ingress-controller
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: oci-native-ingress-controller/templates/rbac.yaml
#
# OCI Native Ingress Controller
#
# Copyright (c) 2023 Oracle America, Inc. and its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/
#
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oci-native-ingress-controller-role
  labels:
    helm.sh/chart: oci-native-ingress-controller-1.4.1
    app.kubernetes.io/name: oci-native-ingress-controller
    app.kubernetes.io/instance: oci-native-ingress-controller
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: [events]
  verbs: [create, patch]
- apiGroups: [""]
  resources: [pods]
  verbs: [get, list, watch]
- apiGroups: ["", "networking.k8s.io"]
  resources: [services, ingresses, ingresses/status, ingressclasses]
  verbs: [get, list, patch, update, watch]
- apiGroups: ["", "ingress.oraclecloud.com"]
  resources: [ingressclassparameters]
  verbs: [get, list, patch, update, watch]
- apiGroups: [""]
  resources: [nodes, namespaces, endpoints]
  verbs: [get, list, watch]
- apiGroups: [""]
  resources: [secrets]
  verbs: [get, list, watch]
- apiGroups: ["discovery.k8s.io"]
  resources: [endpointslices]
  verbs: [get, list, watch]
- apiGroups: [""]
  resources: [pods/status]
  verbs: [patch]
- apiGroups: [""]
  resources: [serviceaccounts]
  verbs: [list, watch]
---
# Source: oci-native-ingress-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oci-native-ingress-controller-rolebinding
  labels:
    helm.sh/chart: oci-native-ingress-controller-1.4.1
    app.kubernetes.io/name: oci-native-ingress-controller
    app.kubernetes.io/instance: oci-native-ingress-controller
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oci-native-ingress-controller-role
subjects:
- kind: ServiceAccount
  name: oci-native-ingress-controller
  namespace: native-ingress-controller-system
---
# Source: oci-native-ingress-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: oci-native-ingress-controller-leader-election-role
  namespace: native-ingress-controller-system
  labels:
    helm.sh/chart: oci-native-ingress-controller-1.4.1
    app.kubernetes.io/name: oci-native-ingress-controller
    app.kubernetes.io/instance: oci-native-ingress-controller
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: [leases]
  verbs: [create]
- apiGroups: ["coordination.k8s.io"]
  resources: [leases]
  resourceNames: [oci-native-ingress-controller]
  verbs: [get, patch, update]
---
# Source: oci-native-ingress-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: oci-native-ingress-controller-leader-election-rolebinding
  namespace: native-ingress-controller-system
  labels:
    helm.sh/chart: oci-native-ingress-controller-1.4.1
    app.kubernetes.io/name: oci-native-ingress-controller
    app.kubernetes.io/instance: oci-native-ingress-controller
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: oci-native-ingress-controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: oci-native-ingress-controller
  namespace: native-ingress-controller-system
---
# Source: oci-native-ingress-controller/templates/service.yaml
#
# OCI Native Ingress Controller
#
# Copyright (c) 2023 Oracle America, Inc. and its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/
#
apiVersion: v1
kind: Service
metadata:
  name: oci-native-ingress-controller
  namespace: native-ingress-controller-system
  labels:
    helm.sh/chart: oci-native-ingress-controller-1.4.1
    app.kubernetes.io/name: oci-native-ingress-controller
    app.kubernetes.io/instance: oci-native-ingress-controller
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: webhook-server
      port: 443
      protocol: TCP
      targetPort: webhook-server
  selector:
    app.kubernetes.io/name: oci-native-ingress-controller
    app.kubernetes.io/instance: oci-native-ingress-controller
---
# Source: oci-native-ingress-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oci-native-ingress-controller
  namespace: native-ingress-controller-system
  labels:
    helm.sh/chart: oci-native-ingress-controller-1.4.1
    app.kubernetes.io/name: oci-native-ingress-controller
    app.kubernetes.io/instance: oci-native-ingress-controller
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: oci-native-ingress-controller
      app.kubernetes.io/instance: oci-native-ingress-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: oci-native-ingress-controller
        app.kubernetes.io/instance: oci-native-ingress-controller
    spec:
      serviceAccountName: oci-native-ingress-controller
      automountServiceAccountToken: true
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: oci-native-ingress-controller-tls
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: oci-native-ingress-controller
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          image: "ghcr.io/oracle/oci-native-ingress-controller:v1.4.1"
          imagePullPolicy: Always
          args: 
          - --lease-lock-name=oci-native-ingress-controller
          - --lease-lock-namespace=native-ingress-controller-system
          - --authType=instance
          - --auth-secret-name=oci-config
          - --controller-class=oci.oraclecloud.com/native-ingress-controller
          - --compartment-id=ocid1.compartment.oc1..aaaaaaaagyawjldswlrq2f2dnsqz2kqlzsvj6mirpcue7oqwzlyuwx7pqjha
          - --subnet-id=ocid1.subnet.oc1.uk-london-1.aaaaaaaaesx6t7upbnxgiqw5hrhhc3jq37wuh4nnzse632b65cdwe6ijn7xq
          - --cluster-id=ocid1.cluster.oc1.uk-london-1.aaaaaaaapfdii3djo66fq2td5ut3ojtpx53fww3aqekn36bctcivgqlfdqqa
          - --metrics-backend=prometheus
          - --metrics-port=2223
          - --v=4
          env:
            - name: OCI_RESOURCE_PRINCIPAL_VERSION
              value: "2.2"
            - name: OCI_RESOURCE_PRINCIPAL_REGION
              value: 
            - name: OCI_SDK_DEFAULT_RETRY_ENABLED
              value: "true"
            - name: OCI_REGION_METADATA
              value: ''
          ports:
            - name: webhook-server
              containerPort: 9443
              protocol: TCP
            - name: metrics-server
              containerPort: 2223
          resources:
            {}
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
      priorityClassName: "system-cluster-critical"
---
# Source: oci-native-ingress-controller/templates/pdb.yaml
#
# OCI Native Ingress Controller
#
# Copyright (c) 2023 Oracle America, Inc. and its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/
#
---
# Source: oci-native-ingress-controller/templates/webhook.yaml
#
# OCI Native Ingress Controller
#
# Copyright (c) 2023 Oracle America, Inc. and its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/
#
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: oci-native-ingress-controller-webhook-serving-cert
  namespace: native-ingress-controller-system
spec:
  dnsNames:
  - oci-native-ingress-controller.native-ingress-controller-system
  - oci-native-ingress-controller.native-ingress-controller-system.svc
  - oci-native-ingress-controller.native-ingress-controller-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: oci-native-ingress-controller-ca
  secretName: oci-native-ingress-controller-tls
---
# Source: oci-native-ingress-controller/templates/webhook.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: oci-native-ingress-controller-ca
  namespace: native-ingress-controller-system
spec:
  selfSigned: {}
---
# Source: oci-native-ingress-controller/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: oci-native-ingress-controller-webhook
  labels:
    helm.sh/chart: oci-native-ingress-controller-1.4.1
    app.kubernetes.io/name: oci-native-ingress-controller
    app.kubernetes.io/instance: oci-native-ingress-controller
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/inject-ca-from: native-ingress-controller-system/oci-native-ingress-controller-webhook-serving-cert
webhooks:
- clientConfig:
    service:
      name: oci-native-ingress-controller
      namespace: native-ingress-controller-system
      path: /mutate-v1-pod
  failurePolicy: Fail
  name: podreadiness.ingress.oraclecloud.com
  admissionReviewVersions:
  - v1beta1
  namespaceSelector:
    matchExpressions:
    
    - key: podreadiness.ingress.oraclecloud.com/pod-readiness-gate-inject
      operator: In
      values:
      - enabled
    
  objectSelector:
    matchExpressions:
    - key: app.kubernetes.io/name
      operator: NotIn
      values:
      - oci-native-ingress-controller
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
